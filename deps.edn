{:paths ["src" "resources" "target/classes"]

 :deps {babashka/fs {:mvn/version "0.1.6"}
        borkdude/dynaload {:mvn/version "0.3.5"}
        cljs-ajax/cljs-ajax {:mvn/version "0.8.4"}
        com.cognitect/transit-clj {:mvn/version "1.0.329"}
        com.cognitect/transit-cljs {:mvn/version "0.8.280"}
        com.stuartsierra/component {:mvn/version "1.1.0"}
        io.github.inferenceql/inferenceql.gpm.sppl {:git/sha "594d4bced407826129723e84907954ebab71b315"}
        io.github.inferenceql/inferenceql.inference {:local/root "../inferenceql.inference"}
        io.github.inferenceql/inferenceql.query {:local/root "../inferenceql.query"}
        lambdaisland/fetch {:mvn/version "1.0.41"}
        metosin/reitit {:mvn/version "0.5.18"}
        org.asciidoctor/asciidoctorj {:mvn/version "2.5.3"}
        org.babashka/cli {:mvn/version "0.3.35"}
        org.clojure/clojure {:mvn/version "1.11.1"}
        org.clojure/clojurescript {:mvn/version "1.11.60"}
        org.jsoup/jsoup {:mvn/version "1.15.2"}
        ring-middleware-format/ring-middleware-format {:mvn/version "0.7.5"}
        ring-refresh/ring-refresh {:mvn/version "0.1.2"}
        ring/ring-core {:mvn/version "1.9.5"}
        ring/ring-jetty-adapter {:mvn/version "1.9.5"}}

 :aliases {:build {:extra-paths ["build"]
                   :extra-deps {io.github.clojure/tools.build {:git/tag "v0.8.3" :git/sha "0d20256"}}
                   :ns-default build}
           :dev {:extra-paths ["dev"]
                 :extra-deps {org.clojure/tools.namespace {:mvn/version "1.3.0"}}}
           :run {:main-opts ["-m" "inferenceql.publish"]}
           :sppl {:extra-deps {io.github.inferenceql/inferenceql.gpm.sppl {:git/sha "594d4bced407826129723e84907954ebab71b315"}}}
           :test {:extra-paths ["test"]
                  :extra-deps {io.github.cognitect-labs/test-runner {:git/tag "v0.5.1" :git/sha "dfb30dd"}
                               org.clojure/test.check {:mvn/version "0.10.0"}}
                  :exec-fn cognitect.test-runner.api/test}}

 :deps/prep-lib {:alias :build
                 :fn build
                 :ensure "target"}}
